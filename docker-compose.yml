version: '3.7'
services:

    rabbit:

      hostname: rabbit
      image: rabbitmq:latest
      environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
      ports:
      - "5672:5672"

    wishart-producer:
        build:
          context: .
          dockerfile: dockerfiles/Dockerfile.producer
        env_file:
          -  configs/variables.env
        volumes:
          - .:/app
        links:
          - rabbit
        depends_on:
          - rabbit

# TODO: Restart always
# TODO: Read only volumes
    wishart-worker:
        build:
          context: .
          dockerfile: dockerfiles/Dockerfile.worker
        env_file:
        - configs/variables.env
        volumes:
        - type: bind
          source: ./configs
          target: /mnt/configs
        - type: volume
          source: wishart-data
          target: /var/data

    database:
        hostname: mongo
        image: mongo:latest
        ports:
        - "27018:27017"

volumes:
    wishart-data:





######################################################################


#version: '2'
#services:
#    rabbit:
#        hostname: rabbit
#        image: rabbitmq:latest
#        environment:
#            - RABBITMQ_DEFAULT_USER=admin
#            - RABBITMQ_DEFAULT_PASS=mypass
#        ports:
#            - "5672:5672"
#
#    worker:
#        build:
#            context: .
#            dockerfile: dockerfile
#        volumes:
#            - .:/app
#        links:
#            - rabbit
#        depends_on:
#            - rabbit
#
#    database:
#        hostname: mongo
#        image: mongo:latest
#        ports:
#            - "27018:27017"


######################################################################

#
#version: '3.2'
#services:
#    app:
#      build:
#        context: .
#        dockerfile: dockerfiles/Dockerfile.app
#      ports:
#        - "5000:5000"
#      links:
#        - rq-redis
#      environment:
#        RQ_REDIS: redis://rq-redis
#        SERVING_REST_HOST: serving
#        SERVING_REST_PORT: 8501
#    worker:
#      build:
#        context: .
#        dockerfile: dockerfiles/Dockerfile.worker
#        args:
#          TF_IMAGE_VERSION: ${TF_VERSION}
#      volumes:
#        - type: volume
#          source: vision-data
#          target: /var/vision
#      environment:
#        RQ_REDIS: redis://rq-redis
#        SERVING_HOST: serving
#        SERVING_PORT: 9000
#        STATSD_HOST: statsd-sl.ostrovok.in
#        VISION_WORKERS: 2
#      links:
#        - rq-redis
#        - serving
#    rq-redis:
#      image: "redis:alpine"
#      ports:
#        - "6379:6379"
#    serving:
#      build:
#        context: .
#        dockerfile: dockerfiles/Dockerfile.serving
#        args:
#          SERVING_VERSION: ${SERVING_VERSION}
#      ports:
#        - "9000:9000"
#        - "8501:8501"
#      environment:
#        - MODEL_NAME=vision_content_tags
#        - MAX_BATCH_SIZE
#      volumes:
#        - type: volume
#          source: serving-models
#          target: /models
#    rq-dashboard:
#      image: "godber/rq-dashboard:latest"
#      ports:
#        - "9222:9222"
#      links:
#        - rq-redis
#      environment:
#        - REDIS_URL=redis://rq-redis
#      command: ['rq-dashboard', '-p', '9222', '-H', 'rq-redis']
#volumes:
#  vision-data:
#  serving-models:
